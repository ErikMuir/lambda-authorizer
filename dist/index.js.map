{"version":3,"sources":["../src/index.js"],"names":["LogEnv","LambdaLogger","LambdaResponse","require","exports","handler","event","context","lambdaEvent","lambdaContext","logger","response","body","info","statusCode","e","error","message","build"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,IAA2CC,OAAO,CAAC,wBAAD,CAAxD;;AAEAC,OAAO,CAACC,OAAR,GAAkB,gBAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAChDP,EAAAA,MAAM,CAACQ,WAAP,GAAqBF,KAArB;AACAN,EAAAA,MAAM,CAACS,aAAP,GAAuBF,OAAvB;AACA,QAAMG,MAAM,GAAG,IAAIT,YAAJ,CAAiB,OAAjB,CAAf;AACA,QAAMU,QAAQ,GAAG,IAAIT,cAAJ,EAAjB;;AAEA,MAAI;AACF,UAAMU,IAAI,GAAG,EAAb;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAYD,IAAZ;AACAD,IAAAA,QAAQ,CAACG,UAAT,GAAsB,GAAtB;AACAH,IAAAA,QAAQ,CAACC,IAAT,GAAgBA,IAAhB;AACD,GALD,CAKE,OAAOG,CAAP,EAAU;AACVL,IAAAA,MAAM,CAACM,KAAP,CAAaD,CAAb;AACAJ,IAAAA,QAAQ,CAACG,UAAT,GAAsB,GAAtB;AACAH,IAAAA,QAAQ,CAACC,IAAT,GAAgB;AAAEI,MAAAA,KAAK,EAAED,CAAC,CAACE;AAAX,KAAhB;AACD;;AAED,SAAON,QAAQ,CAACO,KAAT,EAAP;AACD,CAlBD","sourcesContent":["const { LogEnv, LambdaLogger, LambdaResponse } = require('@erikmuir/lambda-utils');\n\nexports.handler = async function (event, context) {\n  LogEnv.lambdaEvent = event;\n  LogEnv.lambdaContext = context;\n  const logger = new LambdaLogger('index');\n  const response = new LambdaResponse();\n\n  try {\n    const body = {};\n    logger.info(body);\n    response.statusCode = 200;\n    response.body = body;\n  } catch (e) {\n    logger.error(e);\n    response.statusCode = 401;\n    response.body = { error: e.message };\n  }\n\n  return response.build();\n};\n"],"file":"index.js"}